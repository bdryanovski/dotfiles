#
# Global Variables
#
export EDITOR=nvim
export VISUAL=nvim

# Would you like to use another custom folder than $ZSH/custom?
export ZSH_CUSTOM=~/.zshrc_custom

# Macbook M1 FIX
if [[ $(uname -m) == 'arm64' ]]; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# Autocomplete case-insensitive
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

autoload -U promptinit && promptinit
autoload -Uz compinit && compinit
autoload -Uz vcs_info && vcs_info
#
# THEME
#
if [ ! -d "$ZSH_CUSTOM/themes/spaceship-prompt/" ]
then
  echo "Installing Spaceship theme ..."
  git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"

  # Macbook M1 fix
  if [[ $(uname -m) == 'arm64' ]]; then
    ln -sf "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh" "$(brew --prefix)/share/zsh/site-functions/prompt_spaceship_setup"

  fi

  # zsh "$ZSH_CUSTOM/themes/spaceship-prompt/scripts/install.sh"
fi

fpath=( "${ZDOTDIR:-$HOME}/.zfunctions" $fpath )
ln -sf "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh" "${ZDOTDIR:-$HOME}/.zfunctions/prompt_spaceship_setup"

prompt spaceship

SPACESHIP_PROMPT_ORDER=(
  user
  dir
  git
  exec_time
  line_sep
  battery
  exit_code
  char
)

SPACESHIP_CHAR_SYMBOL=üç∫
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_BATTERY_SHOW=true
SPACESHIP_BATTERY_THRESHOLD=40
#
# PLUGINS
#

#
# Extend zsh with Syntax Colors
#
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ]
then
  echo "Installing Syntax Highlighting ..."
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"
fi

source "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

#
# Loading AutoSuggestions
#
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]
then
  echo "Installing AutoSuggestions"
  git clone https://github.com/zsh-users/zsh-autosuggestions.git "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
fi

source "$ZSH_CUSTOM/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"

#
# Loading You Shoul Use plugin
#
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-you-should-use" ]
then
  echo "Installing Zsh You should use"
  git clone https://github.com/MichaelAquilina/zsh-you-should-use.git $ZSH_CUSTOM/plugins/zsh-you-should-use
fi

source "$ZSH_CUSTOM/plugins/zsh-you-should-use/you-should-use.plugin.zsh"

#
# Loading additional plugins 
#
source "$ZSH_CUSTOM/plugins/git.plugin.zsh"

#
# Display Motivational Words For Today (MWFT)
#
MWFT="$(cat "$ZSH_CUSTOM/logo.txt")"
echo "$MWFT"

#
# Aliases
#
source "$ZSH_CUSTOM/alias.zsh"

#
# Helper functions
#
source "$ZSH_CUSTOM/functions.zsh"

#
# JavaScript
#
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

